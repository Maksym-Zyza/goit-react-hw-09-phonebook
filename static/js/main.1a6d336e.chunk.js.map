{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Container.jsx","redux/auth/auth-selectors.js","components/Navigation.jsx","components/UserMenu/default-avatar.jpeg","components/UserMenu/UserMenu.js","components/AuthNav.jsx","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/LoaderViws.jsx","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContacts","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","Container","children","className","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","Navigation","useSelector","authSelectors","to","exact","activeClassName","UserMenu","useDispatch","avatar","defaultAvatar","src","alt","width","type","onClick","authOperations","AuthNav","AppBar","PrivateRoute","redirectTo","routeProps","isLoggedIn","PublicRoute","restricted","ViwsLoader","loading","color","HomeView","lazy","ContactsView","RegisterView","LoginView","App","useEffect","fallback","path","items","createReducer","actions","_","payload","filter","id","action","error","combineReducers","initialUserState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a6d336e.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n// Оновлення\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\n// Додавання\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\n// Видалення\nexport const delContactRequest = createAction(\"contacts/delContactRequest\");\nexport const delContactSuccess = createAction(\"contacts/delContactSuccess\");\nexport const delContactError = createAction(\"contacts/delContactError\");\n\nexport const filterContacts = createAction(\"Contact/filter\");\n\n// ====== До contacts-operetions\n// export const addContact = createAction(\"Contact/add\");\n// export const deleteContact = createAction(\"Contact/delete\");\n","import axios from \"axios\";\nimport * as authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// В заголовок авторизации ставим и снимаем токен :\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nexport const register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nexport const logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nexport const logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\nexport const logoutError = createAction(\"auth/logoutError\");\n\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n","import React from \"react\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","export const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nexport const getUsername = (state) => state.auth.user.name;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst Navigation = () => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\n        Home\n      </NavLink>\n\n      {isAuthenticated && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className=\"link\"\n          activeClassName=\"activeLink\"\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.fe4c4f3c.jpeg\";","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as authOperations from \"../../redux/auth/auth-operations\";\nimport * as authSelectors from \"../../redux/auth/auth-selectors\";\nimport defaultAvatar from \"./default-avatar.jpeg\";\n\nconst UserMenu = () => {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n  const onLogout = () => dispatch(authOperations.logOut());\n  const avatar = defaultAvatar;\n\n  return (\n    <div className=\"container\">\n      <img src={avatar} alt=\"\" width=\"32\" className=\"avatar\" />\n      <span className=\"name\">Welcome, {name}</span>\n      <button type=\"button\" onClick={onLogout} className=\"user-btn\">\n        Log out\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n\n// ========\n// const mapStateToProps = (state) => ({\n//   name: authSelectors.getUsername(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <div>\n    <NavLink to=\"/register\" exact className=\"link\" activeClassName=\"activeLink\">\n      Registration\n    </NavLink>\n\n    <NavLink to=\"/login\" exact className=\"link\" activeClassName=\"activeLink\">\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst AppBar = () => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className=\"header\">\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default AppBar;\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo - \"/login\"\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst ViwsLoader = () => {\n  return (\n    <div className=\"loaderViws\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default ViwsLoader;\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport * as authOperations from \"./redux/auth/auth-operations\";\nimport PrivateRaute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport ViwsLoader from \"./components/LoaderViws\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<ViwsLoader />}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo={\"/contacts\"}>\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo={\"/contacts\"}>\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRaute path=\"/contacts\" redirectTo={\"/login\"}>\n            <ContactsView />\n          </PrivateRaute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default App;\n\n// ===== class =====\n// componentDidMount() {\n//   this.props.onGetCurrentToProps();\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentToProps: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactRequest]: () => true,\n  [actions.delContactSuccess]: () => false,\n  [actions.delContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.logoutSuccess]: () => false,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}