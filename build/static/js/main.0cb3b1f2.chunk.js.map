{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Container.jsx","redux/auth/auth-selectors.js","components/Navigation.jsx","components/UserMenu/default-avatar.jpeg","components/UserMenu/UserMenu.js","components/AuthNav.jsx","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/LoaderViws.jsx","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContacts","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","Container","children","className","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","connect","authSelectors","to","exact","activeClassName","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","Component","component","redirectTo","routeProps","render","props","restricted","ViwsLoader","loading","color","HomeView","lazy","ContactsView","RegisterView","LoginView","App","this","onGetCurrentToProps","fallback","path","React","items","createReducer","actions","_","payload","filter","id","action","error","combineReducers","initialUserState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cb3b1f2.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n// Оновлення\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\n// Додавання\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\n// Видалення\nexport const delContactRequest = createAction(\"contacts/delContactRequest\");\nexport const delContactSuccess = createAction(\"contacts/delContactSuccess\");\nexport const delContactError = createAction(\"contacts/delContactError\");\n\nexport const filterContacts = createAction(\"Contact/filter\");\n\n// ====== До contacts-operetions\n// export const addContact = createAction(\"Contact/add\");\n// export const deleteContact = createAction(\"Contact/delete\");\n","import axios from \"axios\";\nimport * as authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// В заголовок авторизации ставим и снимаем токен :\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nexport const register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nexport const logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nexport const logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\nexport const logoutError = createAction(\"auth/logoutError\");\n\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n","import React from \"react\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","export const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nexport const getUsername = (state) => state.auth.user.name;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className=\"link\"\n        activeClassName=\"activeLink\"\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.fe4c4f3c.jpeg\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../../redux/auth/auth-operations\";\nimport * as authSelectors from \"../../redux/auth/auth-selectors\";\nimport defaultAvatar from \"./default-avatar.jpeg\";\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className=\"container\">\n    <img src={avatar} alt=\"\" width=\"32\" className=\"avatar\" />\n    <span className=\"name\">Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout} className=\"user-btn\">\n      Log out\n    </button>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <div>\n    <NavLink to=\"/register\" exact className=\"link\" activeClassName=\"activeLink\">\n      Registration\n    </NavLink>\n\n    <NavLink to=\"/login\" exact className=\"link\" activeClassName=\"activeLink\">\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className=\"header\">\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo - \"/login\"\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst ViwsLoader = () => {\n  return (\n    <div className=\"loaderViws\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default ViwsLoader;\n","import React, { Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport * as authOperations from \"./redux/auth/auth-operations\";\nimport PrivateRaute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport ViwsLoader from \"./components/LoaderViws\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onGetCurrentToProps();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<ViwsLoader />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo={\"/contacts\"}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo={\"/contacts\"}\n              component={LoginView}\n            />\n            <PrivateRaute\n              path=\"/contacts\"\n              redirectTo={\"/login\"}\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentToProps: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactRequest]: () => true,\n  [actions.delContactSuccess]: () => false,\n  [actions.delContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.logoutSuccess]: () => false,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}