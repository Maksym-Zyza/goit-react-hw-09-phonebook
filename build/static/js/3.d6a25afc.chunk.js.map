{"version":3,"sources":["redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Nothing.jsx","components/Loader.jsx","views/ContactsView.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["getContacts","state","contacts","items","getLoading","loading","getFilter","filter","getContactListFilter","createSelector","name","toLowerCase","includes","connect","value","selectors","dispatch","onChange","e","actions","target","className","style","wrapper","label","input","type","axios","defaults","baseURL","ContactList","this","props","fetchContacts","onDelBtnClick","map","id","number","listItem","namber","btn","onClick","React","Component","delete","then","catch","error","message","operations","a","get","data","ContactForm","handelChange","currentTarget","setState","resetForm","handleSabmit","preventDefault","some","contact","alert","onSubmit","css","title","form","autoComplete","length","obj","post","Nothing","Loader","color","isLoading","module","exports"],"mappings":"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","file":"static/js/3.d6a25afc.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// ===== Мемоизация\nexport const getContactListFilter = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// ==== До\n// export const getContactListFilter = (state) => {\n//   const filter = getFilter(state);\n//   const items = getContacts(state);\n\n//   return items.filter(({ name }) =>\n//     name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from \"axios\";\nimport * as actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// Оновлення\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n};\n\n// Додавання\nexport const addContact = ({ name, number }) => (dispatch) => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error.message)));\n};\n\n// Видалення\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.delContactSuccess(id)))\n    .catch((error) => dispatch(actions.delContactError(error.message)));\n};\n\n// ===============\n// export const fetchContacts = () => (dispatch) => {\n//   dispatch(actions.fetchContactRequest());\n\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n//     .catch((error) => dispatch(actions.fetchContactError(error.message)));\n// };\n\n// axios.defaults.baseURL = \"http://localhost:3000\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./ContactList.module.css\";\n\nclass ContactList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDelBtnClick } = this.props;\n    return (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={style.listItem}>\n            <span className={style.name}>{name}:</span>\n            <span className={style.namber}>{number}</span>\n            <button\n              className={style.btn}\n              type=\"button\"\n              id={id}\n              onClick={() => onDelBtnClick(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContactListFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelBtnClick: (id) => dispatch(operations.deleteContact(id)),\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleSabmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.some((contact) => contact.name === name)) {\n      return alert(`Name \"${name}\" already exists, please enter another name.`);\n    } else this.props.onSubmit({ name, number });\n\n    this.resetForm();\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <>\n        <div>\n          <h1 className={css.title}>Phonebook</h1>\n          <form\n            className={css.form}\n            autoComplete=\"off\"\n            onSubmit={this.handleSabmit}\n          >\n            <label className={css.label}>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <label className={css.label}>\n              Number:\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <button type=\"submit\" className={css.btn}>\n              Add contact\n            </button>\n          </form>\n          <h2 className={css.title}>Contacts ({contacts.length})</h2>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (obj) => dispatch(operations.addContact(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className=\"message\">Nothing, please start creating your contact</h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Nothing from \"../components/Nothing\";\nimport Loader from \"../components/Loader.jsx\";\nimport * as selectors from \"../redux/contacts/contacts-selectors\";\n\nconst App = ({ contacts, isLoading }) => {\n  return (\n    <div className=\"wrapper\">\n      <ContactForm />\n\n      {contacts.length === 0 && <Nothing />}\n\n      {contacts.length > 1 && <Filter />}\n\n      {isLoading && <Loader />}\n\n      {<ContactList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n  isLoading: selectors.getLoading(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}