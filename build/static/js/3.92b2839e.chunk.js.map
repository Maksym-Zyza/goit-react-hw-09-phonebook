{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Nothing.jsx","components/Loader.jsx","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getContacts","state","contacts","items","getLoading","loading","getFilter","filter","getContactListFilter","createSelector","name","toLowerCase","includes","connect","selectors","dispatch","onChange","e","actions","target","className","style","wrapper","label","input","type","axios","defaults","baseURL","onDelBtnClick","id","delete","then","catch","error","message","operations","fetchContacts","a","get","data","useEffect","map","number","listItem","namber","btn","onClick","onSubmit","obj","post","useState","setName","setNumber","css","title","form","autoComplete","preventDefault","some","contact","alert","Nothing","Loader","color","isLoading"],"mappings":"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","file":"static/js/3.92b2839e.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// ===== Мемоизация\nexport const getContactListFilter = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// ==== До\n// export const getContactListFilter = (state) => {\n//   const filter = getFilter(state);\n//   const items = getContacts(state);\n\n//   return items.filter(({ name }) =>\n//     name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from \"axios\";\nimport * as actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// Оновлення\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n};\n\n// Додавання\nexport const addContact = ({ name, number }) => (dispatch) => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error.message)));\n};\n\n// Видалення\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.delContactSuccess(id)))\n    .catch((error) => dispatch(actions.delContactError(error.message)));\n};\n\n// ===============\n// export const fetchContacts = () => (dispatch) => {\n//   dispatch(actions.fetchContactRequest());\n\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n//     .catch((error) => dispatch(actions.fetchContactError(error.message)));\n// };\n\n// axios.defaults.baseURL = \"http://localhost:3000\";\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDelBtnClick, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.listItem}>\n          <span className={style.name}>{name}:</span>\n          <span className={style.namber}>{number}</span>\n          <button\n            className={style.btn}\n            type=\"button\"\n            id={id}\n            onClick={() => onDelBtnClick(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContactListFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelBtnClick: (id) => dispatch(operations.deleteContact(id)),\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n// ======= class =======\n// class ContactList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n\n//   render() {\n//     const { contacts, onDelBtnClick } = this.props;\n//     return (\n//       <ul>\n//         {contacts.map(({ id, name, number }) => (\n//           <li key={id} className={style.listItem}>\n//             <span className={style.name}>{name}:</span>\n//             <span className={style.namber}>{number}</span>\n//             <button\n//               className={style.btn}\n//               type=\"button\"\n//               id={id}\n//               onClick={() => onDelBtnClick(id)}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\n// ContactList.propTypes = PropTypes.shape({\n//   contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n//   onDelBtnClick: PropTypes.func.isRequired,\n// }).isRequired;\n\n// const mapStateToProps = (state) => ({\n//   contacts: selectors.getContactListFilter(state),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onDelBtnClick: (id) => dispatch(operations.deleteContact(id)),\n//   fetchContacts: () => dispatch(operations.fetchContacts()),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const updateName = (e) => {\n    setName(e.target.value);\n  };\n\n  const updateNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSabmit = (e) => {\n    e.preventDefault();\n\n    if (contacts.some((contact) => contact.name === name)) {\n      return alert(`Name \"${name}\" already exists, please enter another name.`);\n    } else onSubmit({ name, number });\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <div>\n        <h1 className={css.title}>Phonebook</h1>\n        <form className={css.form} autoComplete=\"off\" onSubmit={handleSabmit}>\n          <label className={css.label}>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={updateName}\n              className={css.input}\n            />\n          </label>\n          <label className={css.label}>\n            Number:\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={updateNumber}\n              className={css.input}\n            />\n          </label>\n          <button type=\"submit\" className={css.btn}>\n            Add contact\n          </button>\n        </form>\n        <h2 className={css.title}>Contacts ({contacts.length})</h2>\n      </div>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (obj) => dispatch(operations.addContact(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n// ====== class ======\n// class ContactForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   };\n\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   handelChange = (e) => {\n//     const { name, value } = e.currentTarget;\n\n//     this.setState({ [name]: value });\n//   };\n\n//   resetForm = () => {\n//     this.setState({ name: \"\", number: \"\" });\n//   };\n\n//   handleSabmit = (e) => {\n//     e.preventDefault();\n//     const { name, number } = this.state;\n//     const { contacts } = this.props;\n\n//     if (contacts.some((contact) => contact.name === name)) {\n//       return alert(`Name \"${name}\" already exists, please enter another name.`);\n//     } else this.props.onSubmit({ name, number });\n\n//     this.resetForm();\n//   };\n\n//   render() {\n//     const { contacts } = this.props;\n//     return (\n//       <>\n//         <div>\n//           <h1 className={css.title}>Phonebook</h1>\n//           <form\n//             className={css.form}\n//             autoComplete=\"off\"\n//             onSubmit={this.handleSabmit}\n//           >\n//             <label className={css.label}>\n//               Name:\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 value={this.state.name}\n//                 onChange={this.handelChange}\n//                 className={css.input}\n//               />\n//             </label>\n//             <label className={css.label}>\n//               Number:\n//               <input\n//                 type=\"tel\"\n//                 name=\"number\"\n//                 value={this.state.number}\n//                 onChange={this.handelChange}\n//                 className={css.input}\n//               />\n//             </label>\n//             <button type=\"submit\" className={css.btn}>\n//               Add contact\n//             </button>\n//           </form>\n//           <h2 className={css.title}>Contacts ({contacts.length})</h2>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => ({\n//   contacts: selectors.getContacts(state),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: (obj) => dispatch(operations.addContact(obj)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className=\"message\">Nothing, please start creating your contact</h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Nothing from \"../components/Nothing\";\nimport Loader from \"../components/Loader.jsx\";\nimport * as selectors from \"../redux/contacts/contacts-selectors\";\n\nconst App = ({ contacts, isLoading }) => {\n  return (\n    <div className=\"wrapper\">\n      <ContactForm />\n\n      {contacts.length === 0 && <Nothing />}\n\n      {contacts.length > 1 && <Filter />}\n\n      {isLoading && <Loader />}\n\n      {<ContactList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n  isLoading: selectors.getLoading(state),\n});\n\nexport default connect(mapStateToProps)(App);\n"],"sourceRoot":""}